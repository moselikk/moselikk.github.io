name: Deploy Jekyll site to GitHub Pages

on:
  push:
    branches:
      - main  # 仅在main分支推送时触发
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true  # 新运行会取消旧运行

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ["3.2"]  # 使用最新稳定版Ruby
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 包含子模块

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true  # 缓存Bundler依赖
          cache-path: vendor/bundle

      - name: Merge Gitalk configuration
        run: |
          cat <<EOF >> _config.yml
          gitalk:
            clientID: '${{ secrets.GITALK_CLIENT_ID }}'
            clientSecret: '${{ secrets.GITALK_CLIENT_SECRET }}'
            repo: '${{ github.repository }}'
            owner: '${{ github.repository_owner }}'
            admin:
              - '${{ github.repository_owner }}'
            distractionFreeMode: false
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Jekyll configuration
        run: bundle exec jekyll doctor

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build \
            --baseurl "${{ steps.pages.outputs.base_path }}" \
            --destination ./_site \
            --trace
        env:
          JEKYLL_ENV: production
          LC_ALL: C.UTF-8

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
       - name: Cleanup gh-pages branch
        run: |
          git checkout gh-pages || true
          git rm -rf .
          git commit -m "Cleanup" --allow-empty
          git push origin gh-pages -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository-name: ${{ github.repository }}
          branch: gh-pages
          folder: ./_site